#version: '3.1'
#services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: job-kafka-topic:4:1
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    depends_on:
#            - zookeeper
  #        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    container_name: wallet-zookeeper
#    ports:
#      - 2181:2181
#
#  kafka:
#    image: wurstmeister/kafka:latest
#    container_name: wallet-kafka
#    ports:
#      - 9092:9092
#    environment:
#      - KAFKA_HOST_NAME: kafka
#      - KAFKA_PORT: 9092
#      - KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_ADVERTISED_HOST_NAME:-kafka}
#      - KAFKA_ADVERTISED_PORT: 9092
#      - KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      - KAFKA_CREATE_TOPICS: job-kafka-topic:4:1
#       - KAFKA_CREATE_TOPICS: "UploadFile:1:1,GetFile:1:1,TrackUpload:1:1,GetEmailContent:1:1" # topic:partition:replicas
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    depends_on:
#      - zookeeper
version: '2'
services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
#    expose:
#      - "9092"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: transactions:4:1, DLQ:1:1, wallet:1:1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always


  dbpostgresql:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=mydb

#  app:
#    container_name: app-springboot-demo
#    image: app-springboot-demo
#    build: ./
#    ports:
#      - "8081:8081"
##      - "5005:5005"
#    depends_on:
#      - dbpostgresql
#      - kafka
#    environment:
#      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,address=5005
#    restart: always


  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
    restart: always
    container_name: zookeeper

#  kafka:
#    image: wurstmeister/kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9093:9093"
#    expose:
#      - "9092"
#    environment:
#      KAFKA_CREATE_TOPICS: "job-kafka-topic:4:1"
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#    restart: always
#    container_name: kafka

